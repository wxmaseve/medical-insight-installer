#!/bin/bash

APP_HOME=/home/airuntime

echo "========================================================================================================"
echo "AI Runtime Watcher is stopping."
echo "--------------------------------------------------------------------------------------------------------"
ps -ef | grep -v grep | grep "main.py"
echo "========================================================================================================"
sleep 3s

sudo systemctl stop airuntime-watcher.service

echo "========================================================================================================"
echo "AI Runtime Watcher stopped."
echo "--------------------------------------------------------------------------------------------------------"
ps -ef | grep -v grep | grep "main.py"
echo "========================================================================================================"
sleep 3s

# 모델 삭제
inferenceId=$(cat $APP_HOME/aiip-runtime/airuntime-watcher/src/watcher.conf | grep 'inferenceId' | awk '{print $3}')
ip_addr=$(hostname -I | awk '{print $1}')
token=$(curl --location --request POST "http://$ip_addr:17000/api/auth/issueToken" \
--header 'Content-Type: application/json' \
--data-raw '{
    "accessKey": "04f23bfa-80e0-4da9-a0e1-19e75ac87e48" 
}' | jq '.token' | sed 's/"//g')

curl --location --request DELETE "http://$ip_addr:17000/api/core/models/$inferenceId?account_id=26" \
--header 'Content-Type: application/json' \
--header "Authorization: $token"

# 기존 정보 삭제
sed -i '/inferenceId/d' $APP_HOME/aiip-runtime/airuntime-watcher/src/watcher.conf

echo ""
echo "========================================================================================================"
echo "Deleting AI Model(Brain Hemorrhage Detection Solution). it takes 1m."
echo "========================================================================================================"
for x in {1..60} ; do
    sleep 1s
    printf .
done | pv -pt -i0.2 -s60 -w 80 > /dev/null

# 모델 배포
echo "inferenceId = $( \
curl --location --request POST "http://$ip_addr:17000/api/core/models/deployment?account_id=26&account_id=26" \
--header 'Content-Type: application/json' \
--header "Authorization: $token" \
--data-raw '{
  "account_id": 26,
  "description": "Brain Hemorrhage Detection Solution, SKH-BCH-001, v 2.0.0",
  "metadata": {
    "name": "skh-bch-001",
    "k8s_ns_nm": "auto-create-26",
    "concurrent": 1
  },
  "predictor": {
    "type": "custom",
    "minReplicas": 1,
    "maxReplicas": 1,
    "custom": {
      "container": {
        "image": "wxmaseve/skh-bch:0.0.1.onpremise-triage",
        "resources": {
          "limits": {
            "cpu": 2,
            "memory": 4,
            "gpu": 0
          },
          "requests": {
            "cpu": 2,
            "memory": 4,
            "gpu": 0
          }
        },
        "optional_json": "{\n    \"env\": [{\n            \"name\": \"STORAGE_URI\",\n            \"value\": \"pvc://on-nfs-pvc\"\n        },\n        {\n            \"name\": \"MODEL_NAME\",\n            \"value\": \"skh-bch-001\"\n        }\n    ],\n    \"args\": [\n        \"--model_name=$(MODEL_NAME)\"\n    ]\n}"
      }
    }
  }
}' | jq '.data.service_id' | sed 's/"//g')" >> $APP_HOME/aiip-runtime/airuntime-watcher/src/watcher.conf


curl --location --request DELETE "http://$ip_addr:17000/api/auth/cancellationToken" \
--header 'Content-Type: application/json' \
--header "Authorization: $token"

echo ""
echo "========================================================================================================"
echo "Deploying AI Model(Brain Hemorrhage Detection Solution). it takes 2m."
echo "========================================================================================================"
for x in {1..120} ; do
    sleep 1s
    printf .
done | pv -pt -i0.2 -s120 -w 80 > /dev/null


# interface
sed -i "s/192.168.1.31/$(hostname -I | awk '{print $1}')/g" $APP_HOME/aiip-runtime/airuntime-watcher/src/watcher.conf
sudo systemctl start airuntime-watcher.service

echo ""
echo "========================================================================================================"
echo "AI Runtime Watcher(Interface Module) is running."
echo "--------------------------------------------------------------------------------------------------------"
ps -ef | grep -v grep | grep "main.py"
echo "--------------------------------------------------------------------------------------------------------"
sleep 3s

echo "Preparing Sample-Test..."
echo "========================================================================================================"
sleep 5s

# TEST
sudo cp -R $APP_HOME/test/1.2.410.2000010.82.220.12100424023 /data/pacs/input/
sudo mv /data/pacs/input/1.2.410.2000010.82.220.12100424023 /data/pacs/input/RQ1.2.410.2000010.82.220.12100424023
tail -f $APP_HOME/aiip-runtime/airuntime-watcher/logs/airuntime-watcher.log

