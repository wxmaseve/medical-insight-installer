#!/bin/bash

# time zone
sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
sudo apt-get update
sudo apt-get install rdate
sudo rdate -s time.bora.net

# swap off
sudo swapon --show
sudo free -h
sudo swapoff -a
sudo rm -f /swap.img
checkval="/swap.img"
sudo sed -i 's/\/swap.img/\# \/swap.img/g' /etc/fstab
sudo swapon --show

# docker
sudo apt-get update
sudo apt-get remove docker docker-engine docker.io
sudo apt-get install docker.io apt-transport-https gnupg-agent conntrack -y
sudo adduser `id -un` docker

# install k9s, minikube, kubectl, istioctl
sudo chown airuntime:airuntime /mnt/usb/medical-insight/kubernetes/bin/*
sudo chmod +x /mnt/usb/medical-insight/kubernetes/bin/*
sudo install /mnt/usb/medical-insight/kubernetes/bin/* /usr/local/bin/

minikube start --kubernetes-version=v1.18.17 --driver=none --apiserver-ips 127.0.0.1 --apiserver-name localhost && \
minikube status

kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v0.15.1/cert-manager.yaml
istioctl install -y

# java
# install the necessary dependencies
sudo apt-get -q update
sudo apt-get -yq install gnupg curl -y

# add Azul's public key
sudo apt-key adv \
  --keyserver hkp://keyserver.ubuntu.com:80 \
  --recv-keys 0xB1998361219BD9C9

# download and install the package that adds 
# the Azul APT repository to the list of sources 
curl -O https://cdn.azul.com/zulu/bin/zulu-repo_1.0.0-2_all.deb

# install the package
sudo apt-get install ./zulu-repo_1.0.0-2_all.deb

# update the package sources
sudo apt-get update

# install Azul Zulu JDK 11
sudo apt-get install zulu11-jdk -y

java -version

# install redis
sudo apt-get update
sudo apt-get install redis-server -y
sudo sed -i 's/\# requirepass foobared/requirepass \!skcc1234/g' /etc/redis/redis.conf
sudo systemctl restart redis-server

# install nginx
sudo apt-get update
sudo apt-get install nginx -y
sudo cp /mnt/usb/medical-insight/3.aiip-runtime/nginx.conf /etc/nginx/nginx.conf

# install mariadb
sudo apt-get update
sudo apt-get install mariadb-server -y

# initial data migration
cat /mnt/usb/medical-insight/3.aiip-runtime/createDB.sql | sudo mysql -u root
cat /mnt/usb/medical-insight/3.aiip-runtime/v1_airuntime_20210727_060001.sql | mysql -u airuntime --password='!skcc1234' airuntime

# minikube로 구성된 K8S에 LoadBalancer 타입으로 서비스를 배포하면, External IP할당이 되지 않는다.
# NodePort 타입으로 변경하여 해결.
kubectl -n istio-system get svc istio-ingressgateway -o yaml | sed "s/type: LoadBalancer/type: NodePort/g" | kubectl replace -f -

# create working directory
sudo mkdir -p /data/pacs/input /data/pacs/output /data/pacs/backup /data/pacs/tmp /data/airuntime/config /data/airuntime/www/predict/history
sudo chown -R airuntime:airuntime /data
sudo chmod -R 777 /data
sudo ln -s /data/pacs /pacs
sudo ln -s /data/airuntime/www /www

# setup nfs
sudo apt-get update
sudo apt-get install nfs-kernel-server -y
#sudo echo -e "\n/data/pacs/ *(rw,sync,insecure,no_subtree_check,no_root_squash)" >> /etc/exports
echo -e "\n/data/pacs/ *(rw,sync,insecure,no_subtree_check,no_root_squash)" | sudo tee -a /etc/exports
sudo exportfs -a
sudo systemctl restart nfs-kernel-server


# make app home
mkdir -p /home/airuntime/aiip-runtime
sudo cp -R /mnt/usb/medical-insight/3.aiip-runtime/* /home/airuntime/aiip-runtime
sudo chown -R airuntime:airuntime /home/airuntime/aiip-runtime

# web 소스 빌드
sudo apt-get update
sudo apt-get install npm -y
cd /home/airuntime/aiip-runtime/airuntime-web
sed -i "s/gateway/$(hostname -I | awk '{print $1}')/g" /home/airuntime/aiip-runtime/airuntime-web/.env.release
npm install
npm run build

# web 소스 적용
sudo rsync -avz ./dist/* \
  /usr/share/nginx/html/airuntime-web && \
sudo chown -R www-data:www-data /usr/share/nginx/html/airuntime-web && \
sudo systemctl restart nginx


# setup ingress host, ip
sed -i "s/192.168.1.31/$(hostname -I | awk '{print $1}')/g" /home/airuntime/aiip-runtime/config/common-stg.yml
sed -i "s/99999/$(kubectl -n istio-system get svc istio-ingressgateway -o yaml | grep -B 2 'port: 80' | grep 'nodePort' | awk '{print $2}')/g" /home/airuntime/aiip-runtime/config/common-stg.yml
cp /home/airuntime/aiip-runtime/config/common-stg.yml /data/airuntime/config/

# minikube는 api server 포트가 8443으로 되어 있어서 443 -> 8443 포트포워딩 필요
sudo iptables -t nat -A OUTPUT -o lo -p tcp --dport 443 -j REDIRECT --to-port 8443


# knative-serving
kubectl apply -f /mnt/usb/medical-insight/2.kubernetes/knative-serving/serving-crds.yaml
kubectl apply -f /mnt/usb/medical-insight/2.kubernetes/knative-serving/serving-core.yaml
kubectl apply -f /mnt/usb/medical-insight/2.kubernetes/knative-serving/net-certmanager-release.yaml
kubectl apply -f /mnt/usb/medical-insight/2.kubernetes/knative-serving/net-istio-release.yaml

# kfserving
kubectl apply -f /mnt/usb/medical-insight/2.kubernetes/kfserving.yaml

# knative와 kfserving 버전 호환 문제로 임시 조치
kubectl -n kfserving-system get cm inferenceservice-config -o yaml | sed "s/cluster-local-gateway/knative-local-gateway/g" | kubectl replace -f -

sed -i "s/192.168.1.31/$(hostname -I | awk '{print $1}')/g" /home/airuntime/aiip-runtime/airuntime-watcher/nfs-pv.yml
sed -i "s/192.168.1.31/$(hostname -I | awk '{print $1}')/g" /home/airuntime/aiip-runtime/airuntime-watcher/src/watcher.conf
kubectl create namespace auto-create-26
kubectl -n auto-create-26 apply -f /home/airuntime/aiip-runtime/airuntime-watcher/nfs-pv.yml

# setup service deamon
sudo cp /home/airuntime/aiip-runtime/serviced/* /etc/systemd/system/
sudo systemctl enable airuntime-configserver.service
sudo systemctl enable airuntime-gateway.service
sudo systemctl enable airuntime-account.service
sudo systemctl enable airuntime-monitoring.service
sudo systemctl enable airuntime-history.service
sudo systemctl enable airuntime-core.service
sudo systemctl enable airuntime-ifservice.service
sudo systemctl enable airuntime-watcher.service

# run
sudo systemctl start airuntime-configserver.service
sudo systemctl start airuntime-gateway.service
sudo systemctl start airuntime-account.service
sudo systemctl start airuntime-monitoring.service
sudo systemctl start airuntime-history.service
sudo systemctl start airuntime-core.service
sudo systemctl start airuntime-ifservice.service


